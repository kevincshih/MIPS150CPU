library verilog;
use verilog.vl_types.all;
entity RequestController is
    port(
        clk             : in     vl_logic;
        rst             : in     vl_logic;
        af_full         : in     vl_logic;
        wdf_full        : in     vl_logic;
        rdf_valid       : in     vl_logic;
        i_rdf_rd_en     : in     vl_logic;
        i_af_cmd_din    : in     vl_logic_vector(2 downto 0);
        i_addr_din      : in     vl_logic_vector(30 downto 0);
        i_af_wr_en      : in     vl_logic;
        i_wdf_din       : in     vl_logic_vector(127 downto 0);
        i_wdf_mask_din  : in     vl_logic_vector(15 downto 0);
        i_wdf_wr_en     : in     vl_logic;
        i_stall         : in     vl_logic;
        d_rdf_rd_en     : in     vl_logic;
        d_af_cmd_din    : in     vl_logic_vector(2 downto 0);
        d_addr_din      : in     vl_logic_vector(30 downto 0);
        d_af_wr_en      : in     vl_logic;
        d_wdf_din       : in     vl_logic_vector(127 downto 0);
        d_wdf_mask_din  : in     vl_logic_vector(15 downto 0);
        d_wdf_wr_en     : in     vl_logic;
        d_stall         : in     vl_logic;
        line_addr_din   : in     vl_logic_vector(30 downto 0);
        line_af_wr_en   : in     vl_logic;
        line_wdf_din    : in     vl_logic_vector(127 downto 0);
        line_wdf_mask_din: in     vl_logic_vector(15 downto 0);
        line_wdf_wr_en  : in     vl_logic;
        bypass_addr_din : in     vl_logic_vector(30 downto 0);
        bypass_af_wr_en : in     vl_logic;
        bypass_wdf_din  : in     vl_logic_vector(127 downto 0);
        bypass_wdf_mask_din: in     vl_logic_vector(15 downto 0);
        bypass_wdf_wr_en: in     vl_logic;
        filler_addr_din : in     vl_logic_vector(30 downto 0);
        filler_af_wr_en : in     vl_logic;
        filler_wdf_din  : in     vl_logic_vector(127 downto 0);
        filler_wdf_mask_din: in     vl_logic_vector(15 downto 0);
        filler_wdf_wr_en: in     vl_logic;
        pixel_rdf_rd_en : in     vl_logic;
        pixel_af_wr_en  : in     vl_logic;
        pixel_addr_din  : in     vl_logic_vector(30 downto 0);
        rdf_rd_en       : out    vl_logic;
        af_cmd_din      : out    vl_logic_vector(2 downto 0);
        addr_din        : out    vl_logic_vector(30 downto 0);
        af_wr_en        : out    vl_logic;
        wdf_din         : out    vl_logic_vector(127 downto 0);
        wdf_mask_din    : out    vl_logic_vector(15 downto 0);
        wdf_wr_en       : out    vl_logic;
        i_rdf_valid     : out    vl_logic;
        i_af_full       : out    vl_logic;
        i_wdf_full      : out    vl_logic;
        d_rdf_valid     : out    vl_logic;
        d_af_full       : out    vl_logic;
        d_wdf_full      : out    vl_logic;
        line_af_full    : out    vl_logic;
        line_wdf_full   : out    vl_logic;
        bypass_af_full  : out    vl_logic;
        bypass_wdf_full : out    vl_logic;
        filler_af_full  : out    vl_logic;
        filler_wdf_full : out    vl_logic;
        pixel_rdf_valid : out    vl_logic;
        pixel_af_full   : out    vl_logic
    );
end RequestController;
